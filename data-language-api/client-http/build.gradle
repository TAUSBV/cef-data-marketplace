plugins {
  id "maven-publish"
  id "java-library"
  id "data-language.conventions"
}

dependencies {
  api(project(":data"))
  implementation (
      platform("org.springframework.boot:spring-boot-dependencies:2.4.4"),
      implementation("org.springframework.data:spring-data-jpa"),
      implementation("com.fasterxml.jackson.core:jackson-databind"),
      implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310"),
  )
  implementation(
      platform("org.springframework.data:spring-data-bom:2020.0.0"),
      compileOnly("org.projectlombok:lombok"),
      annotationProcessor("org.projectlombok:lombok:1.18.12")
  )
}

jar {
  archivesBaseName = "data-language-client"
  from sourceSets.main.output
  // FIXME understanding why the line below does not work
  //  for this module but does work for model module
//  from project(':data').sourceSets.main.output
  from fileTree('../data/build/classes/java/main') {
    include '**/*.class'
  }
}

tasks.withType(GenerateModuleMetadata) {
  enabled = false
}

publishing {
  repositories {
    maven {
      name = "GitHubPackages"
      url = uri("https://maven.pkg.github.com/tausbv/data-language-api")
      credentials(PasswordCredentials)
    }
  }
  publications {
    gpr(MavenPublication) {
      from components.java
      pom.withXml {
        Node pomNode = asNode()
        pomNode.dependencies.'*'.findAll() {
          it.artifactId.text() == 'data'
        }.each() {
          it.parent().remove(it)
        }
      }
      afterEvaluate {
        artifactId = jar.archiveBaseName.get()
      }
    }
  }
}
