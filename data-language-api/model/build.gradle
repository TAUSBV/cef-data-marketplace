//buildscript {
//  dependencies {
//    classpath "net.taus.oss:querydsl-plugin"
//  }
//}
//
plugins {
  id "maven-publish"
  id "java-library"
  id "idea"
  id "data-language.conventions"
}

apply(plugin: "net.taus.oss.querydsl")

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

ext {
  set("springBootVersion", "2.4.4")
  set("testcontainersVersion", "1.15.3")
  set("queryDslVersion", "4.4.0")
}

dependencies {
  api(platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}"))
  api "org.springframework.data:spring-data-jpa"
  api "org.springframework.boot:spring-boot-starter-data-jpa"
  api "org.hibernate:hibernate-hikaricp"
  api "com.querydsl:querydsl-jpa"
  api "com.querydsl:querydsl-sql-spring:${queryDslVersion}"
  api(project(":data"))
  implementation(platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}"))
  implementation "org.flywaydb:flyway-core:7.8.1"
  implementation "org.apache.commons:commons-math3:3.6.1"

  compileOnly "org.projectlombok:lombok"
  runtimeOnly "mysql:mysql-connector-java"

  annotationProcessor(platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}"))
  annotationProcessor "org.projectlombok:lombok"
  annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
  annotationProcessor "jakarta.persistence:jakarta.persistence-api"
  annotationProcessor "jakarta.annotation:jakarta.annotation-api"
  annotationProcessor "javax.annotation:javax.annotation-api:1.3.2"

  testImplementation(platform("org.testcontainers:testcontainers-bom:${testcontainersVersion}"))
  testImplementation "org.springframework.boot:spring-boot-starter-test"
  testImplementation "org.junit.jupiter:junit-jupiter-params"
  testImplementation "org.testcontainers:junit-jupiter"
  testImplementation "org.testcontainers:mysql"
}

jar {
  archivesBaseName = "data-language-model"
  from sourceSets.main.output
  from project(':data').sourceSets.main.output
}

tasks.withType(GenerateModuleMetadata) {
  enabled = false
}

publishing {
  repositories {
    maven {
      name = "GitHubPackages"
      url = uri("https://maven.pkg.github.com/tausbv/data-language-api")
      credentials(PasswordCredentials)
    }
  }
  publications {
    gpr(MavenPublication) {
      from components.java
      pom.withXml {
        Node pomNode = asNode()
        pomNode.dependencies.'*'.findAll() {
          it.artifactId.text() == 'data'
        }.each() {
          it.parent().remove(it)
        }
      }
      afterEvaluate {
        artifactId = jar.archiveBaseName.get()
      }
    }
  }
}
