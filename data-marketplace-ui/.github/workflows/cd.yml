# FIXME This setup needs a more review to a more robust approach
#  the way that the environments names are being set is too weak
#  and error prone
name: Continuous Delivery
on:
  push:
    branches:
      - 'master'
      - 'stage'
      - 'production'
jobs:
  prepare:
    name: Prepare Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-environment.outputs.environment }}
    steps:
      - id: set-environment
        run: echo "::set-output name=environment::{\"refs/heads/master\":[\"dev\", \"development\"],\"refs/heads/stage\":[\"stag\", \"staging\"],\"refs/heads/production\":[\"prod\", \"production\"]}"
  build:
    name: Build, Test, Publish
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Clone project
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CI_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Publish
        env:
          ENVIRONMENT: ${{ fromJson(needs.prepare.outputs.environment)[github.ref][1] }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dmp-ui-${{ fromJson(needs.prepare.outputs.environment)[github.ref][0] }}
          IMAGE_TAG: latest
        run: |
          docker build --build-arg environment=$ENVIRONMENT -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$(git describe --tag --always)
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$(git describe --tag --always)
      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
